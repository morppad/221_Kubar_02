<!-- Цвета -->
    <Color x:Key="PrimaryBackgroundColor">#FFFFFFFF</Color>
    <Color x:Key="SecondaryBackgroundColor">#F4E8D3</Color>
    <Color x:Key="AccentColor">#67BA80</Color>

    <!-- Кисти -->
    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackgroundColor}"/>
    <SolidColorBrush x:Key="SecondaryBackgroundBrush" Color="{StaticResource SecondaryBackgroundColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>

    <!-- Глобальный стиль текста -->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- Глобальный стиль кнопки -->
    <Style TargetType="Button">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <!-- Глобальный стиль окна -->
    <Style TargetType="Window">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}"/>
    </Style>
</ResourceDictionary>

<Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Styles/GlobalStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>


@startuml
start

:Выбор жильца из списка;
:Загрузка данных из таблицы Residents;

:Показать информацию о квартире и здании;
--> [Residents.building_id -> Buildings.building_id]

:Показать задолженности;
--> [Residents.resident_id -> Debts.resident_id]

:Показать заявки;
--> [Residents.resident_id -> Requests.resident_id]
--> [Requests.service_id -> Services.service_id]
--> [Requests.status_id -> Statuses.status_id]

if (Создать новую заявку?) then (да)
    :Выбор услуги из Services;
    :Создание записи в Requests;
    note right
        Поля: resident_id, service_id,\n
        status_id = "новая", текущая дата
    end note
endif

stop
@enduml

@startuml
start

:Открытие приложения;

:Выбор роли пользователя;
if (Руководитель?) then (да)
    :Просмотр финансовой аналитики;
    :Мониторинг задач и персонала;
    :Управление графиками работ;
elseif (Администратор?) then (да)
    :Просмотр жилого фонда;
    :Управление начислениями и платежами;
    :Формирование отчётов по задолженностям;
    :Создание графика обслуживания домов;

    if (Поступила заявка от жильца?) then (да)
        :Создать заявку;
        :Присвоить статус "Открыта";
        :Назначить персонал;
        :Установить статус "В работе";
        :После выполнения — статус "Закрыта";
    endif

else (Житель)
    :Просмотр информации по квартире;
    :Просмотр начислений и задолженностей;
    :Создание заявки на обслуживание;
    :Получение уведомлений и сообщений;
endif

stop
@enduml